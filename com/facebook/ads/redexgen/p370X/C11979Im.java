package com.facebook.ads.redexgen.p370X;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Build;
import com.facebook.ads.internal.util.process.ProcessUtils;
import com.ironsource.mediationsdk.logger.IronSourceError;
import com.ironsource.mediationsdk.utils.IronSourceConstants;
import io.bidmachine.protobuf.EventTypeExtended;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/* renamed from: com.facebook.ads.redexgen.X.Im */
/* loaded from: assets/audience_network.dex */
public final class C11979Im {
    public static C11979Im A01;
    public static byte[] A02;
    public static final String[] A03;
    public static final String[] A04;
    public final SharedPreferences A00;

    public static String A0U(int i, int i2, int i3) {
        byte[] copyOfRange = Arrays.copyOfRange(A02, i, i + i2);
        for (int i4 = 0; i4 < copyOfRange.length; i4++) {
            copyOfRange[i4] = (byte) ((copyOfRange[i4] - i3) - 35);
        }
        return new String(copyOfRange);
    }

    public static void A0b() {
        A02 = new byte[]{-84, -53, -68, -76, -59, -99, -96, -99, -96, -51, -103, -118, -126, -109, 107, 111, 107, 111, 110, 110, 110, -101, -19, -34, -42, -25, -17, -121, -119, -37, -35, -35, -29, -34, -33, -24, -18, -37, -26, -39, -35, -26, -29, -35, -27, -19, -39, -35, -23, -24, -32, -29, -31, -65, -62, -52, -43, -67, -65, -63, -63, -61, -50, -46, -65, -64, -54, -61, -67, -47, -46, -65, -63, -55, -46, -48, -65, -63, -61, -67, -63, -51, -52, -46, -61, -42, -46, -67, -60, -57, -54, -46, -61, -48, -67, -47, -57, -40, -61, -25, -22, -12, -3, -27, -25, -23, -23, -21, -10, -6, -25, -24, -14, -21, -27, -7, -6, -25, -23, -15, -6, -8, -25, -23, -21, -27, -14, -21, -12, -19, -6, -18, -57, -54, -44, -35, -59, -57, -54, -59, -54, -53, -38, -57, -49, -46, -39, -59, -55, -46, -49, -55, -47, -57, -56, -46, -53, -59, -56, -46, -37, -61, -59, -56, -61, -56, -55, -40, -59, -51, -48, -41, -61, -51, -46, -61, -57, -52, -59, -51, -46, -55, -56, -61, -51, -47, -59, -53, -55, -61, -59, -56, -61, -54, -45, -45, -40, -55, -42, -61, -57, -48, -51, -57, -49, -59, -58, -48, -55, -106, -103, -93, -84, -108, -106, -95, -84, -106, -82, -88, -108, -104, -106, -95, -95, -108, -106, -104, -87, -98, -85, -98, -87, -82, -108, -92, -93, -108, -103, -102, -88, -87, -89, -92, -82, 2, 5, 15, 24, 0, 2, 15, 5, 19, 16, 10, 5, 0, 2, 13, 13, 16, 24, 0, 13, 16, 2, 5, 0, 5, 22, 19, 10, 15, 8, 0, 20, 9, 16, 24, 10, 15, 8, -48, -45, -35, -26, -50, -48, -35, -45, -31, -34, -40, -45, -50, -48, -35, -31, -50, -45, -44, -29, -44, -46, -29, -34, -31, -50, -44, -35, -48, -47, -37, -44, -76, -73, -63, -54, -78, -76, -63, -73, -59, -62, -68, -73, -78, -76, -63, -59, -78, -73, -72, -57, -72, -74, -57, -62, -59, -78, -57, -68, -64, -72, -62, -56, -57, -78, -64, -58, -77, -74, -64, -55, -79, -77, -64, -74, -60, -63, -69, -74, -79, -76, -77, -64, -64, -73, -60, -79, -73, -54, -58, -60, -77, -79, -70, -69, -64, -58, -59, -79, -72, -69, -54, -79, -73, -64, -77, -76, -66, -73, -74, -85, -82, -72, -63, -87, -85, -72, -82, -68, -71, -77, -82, -87, -84, -74, -85, -83, -75, -74, -77, -67, -66, -81, -82, -87, -77, -72, -66, -81, -72, -66, -87, -65, -68, -74, -87, -70, -68, -81, -80, -77, -62, -81, -67, -99, -96, -86, -77, -101, -99, -86, -96, -82, -85, -91, -96, -101, -98, -88, -85, -97, -89, -101, -79, -86, -81, -99, -94, -95, -101, -84, -88, -99, -75, -99, -98, -88, -95, -101, -93, -99, -87, -95, -81, -101, -97, -99, -97, -92, -95, -33, -30, -20, -11, -35, -33, -20, -30, -16, -19, -25, -30, -35, -32, -9, -18, -33, -15, -15, -35, -18, -33, -31, -23, -33, -27, -29, -35, -30, -29, -14, -29, -31, -14, -25, -19, -20, -35, -28, -19, -16, -35, -30, -29, -29, -18, -22, -25, -20, -23, -15, -26, -23, -13, -4, -28, -26, -13, -23, -9, -12, -18, -23, -28, -24, -26, -24, -19, -22, -28, -14, -12, -23, -6, -15, -22, -28, -14, -26, -3, -28, -8, -18, -1, -22, -1, 2, 12, 21, -3, -1, 12, 2, 16, 13, 7, 2, -3, 1, -1, 1, 6, 3, -3, 11, 13, 2, 19, 10, 3, -3, 16, 3, 18, 16, 23, -3, 10, 7, 11, 7, 18, -7, -4, 6, 15, -9, -7, 6, -4, 10, 7, 1, -4, -9, -5, 7, 5, 8, 10, -3, 11, 11, -9, 1, 5, -7, -1, -3, 11, -9, -4, 13, 10, 1, 6, -1, -9, -4, 7, 15, 6, 4, 7, -7, -4, -66, -63, -53, -44, -68, -66, -53, -63, -49, -52, -58, -63, -68, -63, -62, -61, -66, -46, -55, -47, -68, -66, -48, -48, -62, -47, -68, -51, -49, -62, -55, -52, -66, -63, -68, -48, -58, -41, -62, -68, -65, -42, -47, -62, -48, -112, -109, -99, -90, -114, -112, -99, -109, -95, -98, -104, -109, -114, -109, -104, -94, -112, -111, -101, -108, -114, -97, -101, -112, -88, -112, -111, -101, -108, -114, -97, -95, -108, -110, -112, -110, -105, -108, -45, -42, -32, -23, -47, -45, -32, -42, -28, -31, -37, -42, -47, -42, -31, -47, -32, -31, -26, -47, -25, -27, -41, -47, -27, -26, -45, -26, -41, -47, -38, -45, -32, -42, -34, -41, -28, -48, -45, -35, -26, -50, -48, -35, -45, -31, -34, -40, -45, -50, -44, -35, -48, -47, -37, -44, -50, -35, -48, -29, -40, -27, -44, -50, -43, -28, -35, -35, -44, -37, -27, -24, -14, -5, -29, -27, -14, -24, -10, -13, -19, -24, -29, -23, -4, -13, -29, -12, -16, -27, -3, -23, -10, -29, -25, -27, -25, -20, -23, -29, -15, -27, -4, -29, -9, -19, -2, -23, -46, -43, -33, -24, -48, -46, -33, -43, -29, -32, -38, -43, -48, -41, -46, -38, -35, -48, -46, -43, -48, -35, -32, -46, -43, -48, -32, -33, -48, -43, -38, -28, -36, -48, -42, -29, -29, -32, -29, -28, 1, 4, 14, 23, -1, 1, 14, 4, 18, 15, 9, 4, -1, 6, 1, 9, 12, -1, 15, 14, -1, 23, 5, 2, 22, 9, 5, 23, -1, 5, 18, 18, 15, 18, 19, -32, -29, -19, -10, -34, -32, -19, -29, -15, -18, -24, -29, -34, -27, -18, -15, -30, -28, -34, -25, -32, -15, -29, -10, -32, -15, -28, -34, -32, -30, -30, -28, -21, -28, -15, -32, -13, -24, -18, -19, -92, -89, -79, -70, -94, -92, -79, -89, -75, -78, -84, -89, -94, -85, -84, -89, -88, -94, -71, -84, -89, -88, -78, -77, -75, -78, -86, -75, -88, -74, -74, -94, -92, -79, -84, -80, -92, -73, -84, -78, -79, -36, -33, -23, 
        -14, -38, -36, -23, -33, -19, -22, -28, -33, -38, -28, -24, -36, -30, -32, -38, -34, -36, -34, -29, -32, -38, -18, -17, -22, -19, -32, -38, -35, -12, -17, -32, -38, -34, -22, -16, -23, -17, -25, -22, -12, -3, -27, -25, -12, -22, -8, -11, -17, -22, -27, -17, -12, -6, -21, -12, -6, -27, -12, -11, -27, -12, -21, -3, -27, -6, -25, -7, -15, -49, -46, -36, -27, -51, -49, -36, -46, -32, -35, -41, -46, -51, -37, -45, -37, -35, -32, -25, -51, -35, -34, -30, -65, -62, -52, -43, -67, -65, -52, -62, -48, -51, -57, -62, -67, -53, -48, -63, -67, -57, -53, -50, -48, -61, -47, -47, -57, -51, -52, -67, -60, -51, -48, -67, -52, -65, -46, -57, -44, -61, -67, -44, -57, -62, -61, -51, -67, -65, -62, -47, -67, -44, -112, -36, -33, -23, -14, -38, -36, -23, -33, -19, -22, -28, -33, -38, -23, -36, -17, -28, -15, -32, -38, -34, -36, -19, -22, -16, -18, -32, -25, -38, -32, -13, -17, -32, -23, -18, -28, -22, -23, -38, -15, -36, -19, -28, -36, -23, -17, -19, -16, -6, 3, -21, -19, -6, -16, -2, -5, -11, -16, -21, -6, -19, 0, -11, 2, -15, -21, -6, -15, 3, -21, -17, -19, -2, -5, 1, -1, -15, -8, -21, -16, -15, -1, -11, -13, -6, -18, -15, -5, 4, -20, -18, -5, -15, -1, -4, -10, -15, -20, -5, -14, 1, 4, -4, -1, -8, -20, -15, -14, -13, -18, 2, -7, 1, -20, -16, -4, -5, -5, -14, -16, 1, -10, -4, -5, -20, 1, -10, -6, -14, -4, 2, 1, -20, -6, 0, -39, -36, -26, -17, -41, -39, -26, -36, -22, -25, -31, -36, -41, -26, -35, -20, -17, -25, -22, -29, -41, -36, -35, -34, -39, -19, -28, -20, -41, -22, -35, -39, -36, -41, -20, -31, -27, -35, -25, -19, -20, -41, -27, -21, -7, -4, 6, 15, -9, -7, 6, -4, 10, 7, 1, -4, -9, 6, -3, 12, 15, 7, 10, 3, -9, -4, -3, -2, -7, 13, 4, 12, -9, 10, -3, 12, 10, 1, -3, 11, -9, 6, 13, 5, -30, -27, -17, -8, -32, -30, -17, -27, -13, -16, -22, -27, -32, -17, -26, -11, -8, -16, -13, -20, -32, -27, -26, -25, -30, -10, -19, -11, -32, -11, -23, -13, -16, -11, -11, -19, -26, -32, -11, -22, -18, -26, -16, -10, -11, -32, -18, -12, -67, -64, -54, -45, -69, -67, -54, -64, -50, -53, -59, -64, -69, -54, -63, -48, -45, -53, -50, -57, -69, -64, -63, -62, -67, -47, -56, -48, -69, -48, -59, -55, -63, -53, -47, -48, -69, -55, -49, -124, -121, -111, -102, -126, -124, -111, -121, -107, -110, -116, -121, -126, -110, -105, -106, -113, -126, -120, -111, -124, -123, -113, -120, -121, 1, 4, 14, 23, -1, 1, 14, 4, 18, 15, 9, 4, -1, 18, 5, 13, 15, 22, 5, -1, 17, 21, 5, 18, 25, -1, 16, 1, 18, 20, -1, 6, 18, 15, 13, -1, 3, 1, 3, 8, 5, -1, 11, 5, 25, -27, -24, -14, -5, -29, -27, -14, -24, -10, -13, -19, -24, -29, -10, -23, -12, -13, -10, -8, -29, -12, -10, -23, -9, -23, -14, -8, -27, -8, -19, -13, -14, -29, -23, -10, -10, -13, -10, -29, -5, -20, -23, -14, -29, -14, -13, -29, -19, -15, -12, -10, -23, -9, -9, -19, -13, -14, -95, -92, -82, -73, -97, -95, -82, -92, -78, -81, -87, -92, -97, -78, -91, -80, -81, -78, -76, -97, -80, -78, -91, -77, -91, -82, -76, -95, -76, -87, -81, -82, -97, -91, -78, -78, -81, -78, -77, -97, -87, -82, -77, -76, -91, -95, -92, -97, -81, -90, -97, -87, -82, -76, -91, -78, -82, -95, -84, -44, -41, -31, -22, -46, -44, -31, -41, -27, -30, -36, -41, -46, -26, -37, -30, -24, -33, -41, -46, -43, -33, -30, -42, -34, -46, -26, -20, -31, -42, -46, -30, -31, -46, -43, -44, -42, -34, -38, -27, -30, -24, -31, -41, -112, -109, -99, -90, -114, -112, -99, -109, -95, -98, -104, -109, -114, -94, -105, -98, -92, -101, -109, -114, -105, -104, -109, -108, -114, -101, -98, -112, -109, -108, -95, -42, -39, -29, -20, -44, -42, -29, -39, -25, -28, -34, -39, -44, -24, -35, -28, -22, -31, -39, -44, -34, -29, -34, -23, -44, -22, -29, -24, -32, -34, -27, -27, -42, -41, -31, -38, -44, -24, -38, -40, -28, -29, -39, -24, -44, -40, -28, -30, -27, -31, -38, -23, -38, -82, -79, -69, -60, -84, -82, -69, -79, -65, -68, -74, -79, -84, -64, -75, -68, -62, -71, -79, -84, -71, -82, -62, -69, -80, -75, -84, -67, -71, -82, -58, -84, -64, -63, -68, -65, -78, -84, -74, -69, -84, -68, -61, -78, -65, -71, -82, -58, -97, -94, -84, -75, -99, -97, -84, -94, -80, -83, -89, -94, -99, -79, -90, -83, -77, -86, -94, -99, -80, -93, -79, -93, -78, -99, -92, -83, -95, -77, -79, -99, -83, -84, -99, -84, -97, -78, -89, -76, -93, -99, -80, -93, -82, -83, -80, -78, -89, -84, -91, -110, -107, -97, -88, -112, -110, -97, -107, -93, -96, -102, -107, -112, -90, -109, -89, -93, -108, -40, -37, -27, -18, -42, -40, -27, -37, -23, -26, -32, -37, -42, -20, -22, -36, -42, -38, -40, -38, -33, -36, -42, -28, -26, -37, -20, -29, -36, -42, -35, -26, -23, -42, -32, -28, -40, -34, -36, -22, -36, -33, -23, -14, -38, -36, -23, -33, -19, -22, -28, -33, -38, -16, -18, -32, -38, -18, -17, -32, -36, -24, -28, -23, -30, -38, -28, -24, -36, -30, -32, -38, -33, -32, -34, -22, -33, -28, -23, -30, -50, -47, -37, -28, -52, -50, -37, -47, -33, -36, -42, -47, -52, -28, -43, -42, -31, -46, -39, -42, -32, -31, -46, -47, -52, -42, -37, -31, -46, -37, -31, -52, -30, -33, -39, -52, -35, -33, -46, -45, 
        -42, -27, -46, -32, -112, -109, -99, -90, -114, -112, -94, -94, -108, -93, -114, -107, -108, -93, -110, -105, -104, -99, -106, -114, -92, -99, -104, -107, -104, -108, -109, -18, -15, -5, 4, -20, -17, -18, -5, -5, -14, -1, -20, -5, -4, 1, -10, -13, 6, -20, -18, -15, -20, -7, -4, -18, -15, -14, -15, -20, -4, -5, -20, -18, 0, 0, -14, 1, 0, -20, -7, -4, -18, -15, -14, -15, -5, -2, 8, 17, -7, -4, -1, 8, -3, 2, 7, -5, 12, 5, -7, 12, -1, 10, 9, 12, 14, -7, 3, 8, 14, -1, 12, 16, -5, 6, -7, 7, 13, -74, -71, -61, -52, -76, -73, -63, -60, -72, -64, -76, -69, -59, -76, -72, -62, -59, -76, -74, -57, -100, -97, -87, -78, -102, -99, -89, -86, -98, -90, -102, -89, -86, -98, -90, -82, -98, -83, -96, -96, -87, -6, -3, 7, 16, -8, -4, -6, -4, -8, 6, -6, 2, -8, 8, 7, 5, 18, -8, 12, 9, 5, 2, 13, -8, 12, -4, 11, -2, -2, 7, -87, -84, -74, -65, -89, -85, -76, -79, -85, -77, -69, -89, -69, -83, -85, -73, -74, -84, -89, -85, -80, -87, -74, -74, -83, -76, -89, -83, -74, -87, -86, -76, -83, -84, -116, -113, -103, -94, -118, -114, -99, -116, -98, -109, -118, -98, -109, -108, -112, -105, -113, -118, -112, -103, -116, -115, -105, -112, -113, -37, -34, -24, -15, -39, -35, -18, -37, -39, -37, -24, -29, -25, -37, -18, -29, -23, -24, -39, -34, -33, -26, -37, -13, -39, -25, -19, -31, -28, -18, -9, -33, -29, -12, -31, -33, -19, -23, -18, -33, -13, -29, -31, -20, -27, -33, -31, -18, -23, -19, -31, -12, -23, -17, -18, -33, -16, -27, -14, -29, -27, -18, -12, -31, -25, -27, -45, -42, -32, -23, -47, -42, -41, -27, -26, -28, -31, -21, -47, -31, -32, -47, -42, -37, -27, -33, -37, -27, -27, -94, -91, -81, -72, -96, -91, -86, -76, -94, -93, -83, -90, -96, -73, -86, -91, -90, -80, -96, -89, -74, -83, -83, -76, -92, -77, -90, -90, -81, -96, -80, -81, -96, -81, -94, -75, -86, -73, -90, -116, -113, -103, -94, -118, -113, -102, -118, -105, -112, -98, -98, -118, -98, -97, -99, -108, -114, -97, -118, -98, -112, -114, -102, -103, -113, -118, -114, -109, -116, -103, -103, -112, -105, -118, -108, -104, -101, -48, -45, -35, -26, -50, -44, -35, -48, -47, -37, -44, -50, -48, -28, -29, -34, -50, -45, -44, -30, -29, -31, -34, -24, -50, -37, -44, -48, -38, -30, -63, -60, -50, -41, -65, -59, -50, -63, -62, -52, -59, -65, -62, -55, -60, -60, -59, -46, -65, -44, -49, -53, -59, -50, -65, -55, -50, -58, -49, -103, -100, -90, -81, -105, -99, -90, -103, -102, -92, -99, -105, -100, -99, -102, -83, -97, -105, -89, -82, -99, -86, -92, -103, -79, -92, -89, -79, -70, -94, -88, -79, -92, -91, -81, -88, -94, -88, -69, -78, -77, -81, -92, -68, -88, -75, -94, -90, -92, -90, -85, -88, -54, -51, -41, -32, -56, -50, -41, -54, -53, -43, -50, -56, -50, -31, -40, -39, -43, -54, -30, -50, -37, -56, -52, -54, -52, -47, -50, -56, -49, -40, -37, -56, -51, -36, -43, -94, -91, -81, -72, -96, -90, -81, -94, -93, -83, -90, -96, -90, -71, -80, -79, -83, -94, -70, -90, -77, -96, -73, 115, -76, -73, -63, -54, -78, -72, -63, -76, -75, -65, -72, -78, -71, -56, -63, -63, -72, -65, -59, -56, -46, -37, -61, -55, -46, -59, -58, -48, -55, -61, -51, -46, -48, -51, -46, -55, -61, -36, -61, -45, -39, -40, -61, -46, -45, -46, -61, -54, -39, -48, -48, -41, -57, -42, -55, -55, -46, -61, -45, -46, -61, -41, -56, -49, -57, -54, -44, -35, -59, -53, -44, -57, -56, -46, -53, -59, -44, -53, -38, -35, -43, -40, -47, -118, -115, -105, -96, -120, -114, -105, -118, -117, -107, -114, -120, -103, -101, -114, -107, -104, -118, -115, -79, -76, -66, -57, -81, -75, -66, -79, -78, -68, -75, -81, -62, -79, -73, -75, -81, -61, -72, -79, -69, -75, -46, -43, -33, -24, -48, -42, -33, -46, -45, -35, -42, -48, -29, -42, -24, -46, -29, -43, -42, -43, -48, -44, -32, -33, -25, -42, -29, -28, -38, -32, -33, -38, -35, -25, -16, -40, -34, -25, -38, -37, -27, -34, -40, -20, -35, -28, -40, -36, -38, -36, -31, -34, -93, -90, -80, -71, -95, -89, -80, -93, -92, -82, -89, -95, -75, -90, -83, -95, -81, -93, -80, -93, -87, -89, -90, -95, -91, -93, -91, -86, -89, -31, -28, -18, -9, -33, -27, -18, -31, -30, -20, -27, -33, -13, -7, -18, -29, -73, -70, -60, -51, -75, -69, -60, -70, -75, -71, -73, -56, -70, -55, -75, -71, -62, -65, -71, -63, -73, -72, -62, -69, -103, -100, -90, -81, -105, -99, -80, -88, -89, -85, -99, -105, -82, -95, -100, -99, -89, -105, -81, -103, -84, -101, -96, -105, -84, -95, -91, -99, -91, -88, -78, -69, -93, -87, -68, -72, -74, -91, -93, -73, -76, -80, -93, -73, -89, -74, -93, -89, -84, -87, -89, -81, -73, -42, -39, -29, -20, -44, -37, -41, -44, -36, -27, -44, -28, -21, -38, -25, -31, -42, -18, -44, -24, -38, -40, -22, -25, -38, -55, -28, -32, -38, -29, -115, -112, -102, -93, -117, -110, -114, -117, -109, -100, -117, -101, -94, -111, -98, -104, -115, -91, -117, -94, -111, -98, -97, -107, -101, -102, -46, -43, -33, -24, -48, -41, -38, -35, -27, -42, -29, -48, -45, -38, -43, -43, -38, -33, -40, -48, -27, -32, -36, -42, -33, -72, -69, -59, -50, -74, -67, -58, -55, -70, -68, -74, -69, -68, -51, -64, -70, -68, -74, -54, -70, -55, -68, -68, -59, -74, -72, -61, -50, -72, -48, -54, -74, -58, -59, -58, -55, -45, -36, -60, -52, -43, -60, -44, -37, -54, -41, 
        -47, -58, -34, -60, -54, -45, -58, -57, -47, -54, -55, -86, -83, -73, -64, -88, -78, -86, -85, -88, -84, -66, -68, -67, -72, -74, -88, -68, -84, -79, -82, -74, -86, -68, -88, -81, -78, -63, -88, -82, -73, -86, -85, -75, -82, -83, -51, -48, -38, -29, -53, -43, -39, -36, -33, -53, -33, -47, -49, -37, -38, -48, -53, -49, -44, -51, -38, -38, -47, -40, -53, -47, -38, -51, -50, -40, -47, -48, -27, -24, -14, -5, -29, -19, -14, -9, -8, -27, -16, -16, -29, -27, -14, -24, -29, -13, -12, -23, -14, -29, -13, -14, -29, -19, -14, -9, -8, -27, -14, -8, -29, -21, -27, -15, -23, -9, -118, -115, -105, -96, -120, -110, -105, -99, -120, -110, -106, -118, -112, -114, -120, -118, -100, -120, -116, -99, -118, -120, -114, -105, -118, -117, -107, -114, -115, -9, -6, 4, 13, -11, -1, 4, 10, -11, -1, 3, -9, -3, -5, -11, -9, 9, -11, -7, 10, -9, -11, -1, 4, 4, -5, 8, -11, 9, 7, 11, -9, 8, -5, -69, -66, -56, -47, -71, -61, -56, -50, -71, -52, -48, -71, -61, -56, -51, -50, -69, -58, -58, -71, -61, -56, -48, -69, -58, -61, -66, -69, -50, -61, -55, -56, -51, -2, 1, 11, 20, -4, 6, 11, 17, -4, 15, 19, -4, 19, 6, 1, 2, 12, -4, -2, 16, -4, 0, 17, -2, -4, 2, 11, -2, -1, 9, 2, 1, -87, -84, -74, -65, -89, -79, -74, -68, -89, -70, -66, -89, -66, -79, -84, -83, -73, -89, -87, -69, -89, -85, -68, -87, -89, -79, -74, -74, -83, -70, -89, -69, -71, -67, -87, -70, -83, -119, -116, -106, -97, -121, -111, -106, -100, -115, -102, -101, -100, -111, -100, -111, -119, -108, -121, -106, -115, -97, -121, -111, -107, -119, -113, -115, -121, -116, -115, -101, -111, -113, -106, -61, -58, -48, -39, -63, -50, -47, -55, -63, -59, -43, -63, -59, -49, -46, -43, -40, -30, -21, -45, -32, -29, -37, -37, -35, -30, -37, -45, -39, -30, -40, -28, -29, -35, -30, -24, -45, -28, -26, -39, -38, -35, -20, -65, -62, -52, -43, -67, -53, -65, -42, -67, -65, -62, -47, -67, -46, -51, -67, -63, -65, -63, -58, -61, -6, -3, 7, 16, -8, 6, 11, -2, -4, 13, -8, -6, -3, -8, -3, -2, 13, -6, 2, 5, 12, -8, -4, 5, 2, -4, 4, -6, -5, 5, -2, -89, -86, -76, -67, -91, -77, -72, -85, -87, -70, -91, -89, -86, -89, -74, -70, -85, -72, -91, -85, -76, -89, -88, -78, -85, -86, -39, -36, -26, -17, -41, -27, -22, -35, -37, -20, -41, -31, -27, -39, -33, -35, -41, -39, -21, -41, -37, -20, -39, -41, -35, -26, -39, -38, -28, -35, -36, -93, -90, -80, -71, -95, -81, -76, -89, -91, -74, -95, -72, -85, -90, -89, -79, -95, -93, -75, -95, -91, -74, -93, -95, -89, -80, -93, -92, -82, -89, -90, -101, -98, -88, -79, -103, -89, -84, -97, -99, -82, -103, -80, -93, -98, -97, -87, -103, -100, -101, -99, -91, -95, -84, -87, -81, -88, -98, -103, -101, -83, -103, -99, -82, -101, -103, -97, -88, -101, -100, -90, -97, -98, -53, -50, -40, -31, -55, -41, -36, -49, -51, -34, -55, -32, -45, -50, -49, -39, -55, -51, -39, -33, -40, -34, -50, -39, -31, -40, -55, -32, -45, -35, -45, -52, -42, -49, -122, -119, -109, -100, -124, -110, -105, -118, -120, -103, -124, -101, -114, -119, -118, -108, -124, -111, -108, -108, -107, -114, -109, -116, -124, -118, -109, -122, -121, -111, -118, -119, -23, -20, -10, -1, -25, -11, -6, -19, -21, -4, -25, -2, -15, -20, -19, -9, -25, -11, -3, -4, -19, -25, -2, -15, -5, -15, -22, -12, -19, -6, -3, 7, 16, -8, 6, 11, -2, -4, 13, -8, 15, 2, -3, -2, 8, -8, 6, 14, 13, -2, -3, -8, 8, 7, -8, 12, 13, -6, 11, 13, -110, -107, -97, -88, -112, -98, -93, -106, -108, -91, -112, -89, -102, -107, -106, -96, -112, -95, -99, -110, -86, -112, -95, -110, -90, -92, -106, -112, -89, -102, -92, -102, -109, -99, -106, -70, -67, -57, -48, -72, -57, -70, -51, -62, -49, -66, -72, -68, -70, -53, -56, -50, -52, -66, -59, -72, -68, -56, -58, -55, -70, -68, -51, -72, -51, -63, -53, -66, -52, -63, -56, -59, -67, -47, -44, -34, -25, -49, -34, -47, -28, -39, -26, -43, -49, -26, -39, -44, -43, -33, -49, -36, -33, -33, -32, -39, -34, -41, -49, -43, -34, -47, -46, -36, -43, -44, -119, -116, -106, -97, -121, -106, -119, -100, -111, -98, -115, -121, -98, -111, -115, -97, -121, -101, -106, -119, -104, -101, -112, -105, -100, -121, -108, -105, -113, -113, -111, -106, -113, -121, -115, -106, -119, -118, -108, -115, -116, -109, -106, -96, -87, -111, -95, -96, -106, -105, -88, -101, -107, -105, -111, -102, -101, -91, -90, -95, -92, -85, -111, -106, -109, -90, -109, -111, -105, -96, -109, -108, -98, -105, -106, -114, -111, -101, -92, -116, -100, -99, -110, -101, -116, -109, -113, -116, -114, -99, -99, -116, -114, -103, -92, -114, -90, -96, -68, -65, -55, -46, -70, -53, -57, -68, -44, -68, -67, -57, -64, -70, -66, -57, -60, -66, -58, -70, -56, -68, -45, -70, -65, -64, -57, -68, -44, -70, -56, -50, -82, -79, -69, -60, -84, -67, -71, -82, -58, -82, -81, -71, -78, -84, -79, -74, -64, -82, -81, -71, -78, -84, -65, -78, -70, -68, -63, -78, -84, -68, -69, -84, -69, -78, -63, -60, -68, -65, -72, -84, -71, -68, -64, -64, -116, -113, -103, -94, -118, -101, -105, -116, -92, -116, -115, -105, -112, -98, -118, -105, -102, -110, -110, -108, -103, -110, -118, -112, -103, -116, -115, -105, -112, -113, -111, -108, -98, -89, -113, -96, -100, -111, -87, -111, -110, -100, -107, -93, -113, -93, -104, -97, -89, -113, -107, -98, -108, -109, 
        -111, -94, -108, -80, -77, -67, -58, -82, -65, -63, -76, -69, -66, -80, -77, -82, -72, -67, -61, -76, -63, -62, -61, -72, -61, -72, -80, -69, -82, -77, -56, -67, -80, -68, -72, -78, -82, -58, -76, -79, -59, -72, -76, -58, -18, -15, -5, 4, -20, -3, -1, -14, -7, -4, -18, -15, -20, -5, -18, 1, -10, 3, -14, -20, -15, 6, -5, -18, -6, -10, -16, -20, 4, -14, -17, 3, -10, -14, 4, -70, -67, -57, -48, -72, -55, -53, -66, -59, -56, -70, -67, -72, -53, -49, -72, -67, -46, -57, -70, -58, -62, -68, -72, -48, -66, -69, -49, -62, -66, -48, -98, -95, -85, -76, -100, -83, -81, -94, -77, -94, -85, -79, -100, -83, -87, -98, -74, -98, -97, -87, -94, -100, -98, -78, -79, -84, -100, -96, -87, -90, -96, -88, -16, -13, -3, 6, -18, -1, 4, 1, -10, -12, -18, -2, -3, -18, -61, -64, -62, -18, 1, -12, 2, -1, -2, -3, 2, -12, -47, -44, -34, -25, -49, -30, -43, -45, -33, -35, -32, -27, -28, -43, -49, -46, -28, -49, -47, -42, -28, -43, -30, -49, -43, -24, -28, -30, -47, -29, -49, -45, -40, -47, -34, -41, -43, -53, -50, -40, -31, -55, -36, -32, -55, -52, -33, -48, -48, -49, -36, -55, -51, -46, -49, -51, -43, -55, -49, -40, -53, -52, -42, -49, -50, -81, -78, -68, -59, -83, -64, -60, -83, -66, -70, -81, -57, -80, -81, -79, -71, -83, -79, -64, -81, -63, -74, -83, -76, -81, -70, -70, -80, -81, -79, -71, 0, 3, 13, 22, -2, 18, 3, 10, -2, 0, 3, 18, -2, 2, 0, 2, 7, 8, 13, 6, -2, 12, 8, 11, 11, 8, 18, -19, -16, -6, 3, -21, -1, -16, -9, -21, -17, -19, -17, -12, -11, -6, -13, -21, -18, -19, -6, -6, -15, -2, -21, -7, -2, -15, -17, 0, -21, -15, -6, -19, -18, -8, -15, -16, -63, -60, -50, -41, -65, -45, -60, -53, -65, -48, -46, -49, -48, -59, -46, -52, -39, -65, -60, -59, -45, -44, -46, -49, -39, -65, -49, -62, -54, -59, -61, -44, -45, -20, -17, -7, 2, -22, -2, -16, -7, -17, -12, -7, -14, -22, -15, -3, -16, -4, 0, -16, -7, -18, 4, -22, -18, -20, -5, -5, -12, -7, -14, -22, -20, -9, -9, -6, 2, -16, -17, -119, -116, -106, -97, -121, -101, -115, -100, -121, -100, -115, -96, -100, -121, -117, -105, -108, -105, -102, -121, -116, -95, -106, -119, -107, -111, -117, -119, -108, -108, -95, -53, -50, -40, -31, -55, -35, -46, -39, -33, -42, -50, -55, -53, -50, -50, -55, -49, -30, -34, -49, -40, -35, -45, -39, -40, -55, -34, -39, -55, -38, -42, -53, -29, -53, -52, -42, -49, -35, -123, -120, -110, -101, -125, -105, -116, -109, -103, -112, -120, -125, -121, -112, -119, -123, -106, -125, -118, -119, -123, -104, -103, -106, -119, -125, -121, -109, -110, -118, -115, -117, -125, -109, -110, -125, -121, -106, -123, -105, -116, -119, -105, -23, -20, -10, -1, -25, -5, -16, -9, -3, -12, -20, -25, -15, -17, -10, -9, -6, -19, -25, -20, -19, -5, -4, -6, -9, 1, -25, -21, -23, -12, -12, -63, -60, -50, -41, -65, -45, -56, -49, -43, -52, -60, -65, -55, -50, -61, -46, -59, -51, -59, -50, -44, -65, -46, -59, -44, -46, -39, -65, -61, -49, -43, -50, -44, -59, -46, -65, -49, -50, -65, -59, -51, -48, -44, -39, -65, -46, -59, -45, -48, -49, -50, -45, -59, -106, -103, -93, -84, -108, -88, -99, -92, -86, -95, -103, -108, -98, -93, -98, -87, -108, -101, -89, -92, -94, -108, -104, -92, -93, -87, -102, -93, -87, -108, -91, -89, -92, -85, -98, -103, -102, -89, -99, -96, -86, -77, -101, -81, -92, -85, -79, -88, -96, -101, -91, -86, -91, -80, -101, -85, -86, -101, -97, -88, -99, -81, -81, -101, -88, -85, -99, -96, -91, -86, -93, -58, -55, -45, -36, -60, -40, -51, -44, -38, -47, -55, -60, -47, -44, -52, -60, -58, -40, -40, -54, -39, -60, -38, -41, -47, -94, -91, -81, -72, -96, -76, -87, -80, -74, -83, -91, -96, -79, -77, -90, -92, -80, -82, -79, -74, -75, -90, -96, -93, -86, -91, -91, -90, -77, -96, -75, -80, -84, -90, -81, -71, -68, -58, -49, -73, -53, -61, -63, -56, -73, -50, -63, -68, -67, -57, -73, -58, -57, -58, -73, -64, -71, -54, -68, -49, -71, -54, -67, -73, -71, -69, -69, -67, -60, -67, -54, -71, -52, -67, -68, -73, -70, -60, -51, -75, -55, -58, -62, -65, -54, -75, -55, -71, -56, -69, -69, -60, -75, -69, -60, -73, -72, -62, -69, -70, -75, -116, -75, -121, -115, -105, -102, -92, -83, -107, -87, -86, -105, -103, -95, -86, -88, -105, -103, -101, -107, -99, -88, -91, -85, -90, -97, -92, -99, -107, -101, -92, -105, -104, -94, -101, -102, -84, -81, -71, -62, -86, -66, -60, -71, -82, -86, -84, -79, -65, -80, -67, -86, -84, -81, -86, -73, -70, -84, -81, -121, -118, -108, -99, -123, -103, -97, -108, -119, -123, -117, -108, -118, -106, -107, -113, -108, -102, -123, -106, -104, -117, -116, -113, -98, -55, -52, -42, -33, -57, -36, -47, -43, -51, -57, -36, -41, -57, -33, -55, -47, -36, -57, -50, -41, -38, -57, -34, -47, -52, -51, -41, -57, -40, -44, -55, -31, -57, -43, -37, -49, -46, -36, -27, -51, -30, -41, -37, -45, -51, -30, -35, -51, -27, -49, -41, -30, -51, -44, -35, -32, -51, -28, -41, -46, -45, -35, -51, -34, -32, -45, -34, -49, -32, -45, -46, -51, -37, -31, -71, -68, -58, -49, -73, -52, -63, -59, -67, -57, -51, -52, -73, -54, -67, -49, -71, -54, -68, -67, -68, -73, -50, -63, -68, -67, -57, -91, -88, -78, -69, -93, -72, -74, -83, -85, -85, -87, -74, -93, -78, -91, -72, -83, -70, -87, -93, -74, -87, -85, 
        -83, -73, -72, -87, -74, -93, -70, -83, -87, -69, -93, -87, -74, -74, -77, -74, -93, -89, -91, -80, -80, -90, -91, -89, -81, -91, -88, -78, -69, -93, -71, -78, -83, -75, -71, -87, -93, -88, -90, -93, -78, -91, -79, -87, -93, -76, -87, -74, -93, -76, -74, -77, -89, -87, -73, -73, -77, -74, -64, -55, -79, -57, -62, -74, -77, -58, -73, -79, -73, -54, -58, -60, -77, -79, -70, -69, -64, -58, -59, -79, -72, -63, -60, -79, -75, -70, -77, -69, -64, -69, -64, -71, -23, -20, -10, -1, -25, -3, -5, -19, -25, -23, -8, -8, -25, -20, -15, -17, -19, -5, -4, -25, -23, -8, -15, -99, -96, -86, -77, -101, -79, -81, -95, -101, -97, -99, -97, -92, -95, -96, -101, -95, -76, -95, -97, -79, -80, -85, -82, -101, -94, -85, -82, -101, -86, -95, -80, -77, -85, -82, -89, -60, -57, -47, -38, -62, -40, -42, -56, -62, -58, -60, -58, -53, -56, -57, -62, -56, -37, -56, -58, -40, -41, -46, -43, -62, -52, -47, -62, -58, -60, -58, -53, -56, -62, -48, -60, -47, -60, -54, -56, -43, -58, -55, -45, -36, -60, -38, -40, -54, -60, -53, -43, -60, -43, -54, -41, -60, -57, -38, -45, -55, -47, -54, -88, -85, -75, -66, -90, -68, -70, -84, -90, -71, -80, -73, -73, -77, -84, -90, -88, -75, -80, -76, -88, -69, -80, -74, -75, -37, -34, -24, -15, -39, -17, -19, -33, -39, -19, -33, -35, -17, -20, -33, -39, -17, -20, -29, -39, -22, -37, -20, -19, -33, -20, -91, -88, -78, -69, -93, -71, -73, -87, -93, -73, -76, -80, -83, -72, -93, -73, -89, -74, -87, -87, -78, -93, -91, -80, -69, -91, -67, -73, -71, -68, -58, -49, -73, -50, -63, -68, -67, -57, -73, -60, -57, -65, -73, -52, -63, -59, -67, -73, -49, -63, -52, -64, -73, -56, -71, -51, -53, -67, -26, -23, -13, -4, -28, -5, -18, -23, -22, -12, -28, -14, -22, -9, -20, -22, -28, -15, -12, -20, -20, -18, -13, -20, -16, -13, -3, 6, -18, 5, -8, -13, -12, -2, -18, 1, -12, 2, -12, 3, -18, 5, 3, -8, -4, -12, -18, -2, -3, -18, -1, -16, 4, 2, -12, -4, -1, 9, 18, -6, 17, 4, -1, 0, 10, -6, 14, 0, -2, 10, 9, -1, -6, -2, 3, -4, 9, 9, 0, 7, -6, -2, 10, 9, 14, 15, -4, 9, 15, -6, 1, 7, 16, 14, 3, -6, 0, 9, -4, -3, 7, 0, -1, -85, -82, -72, -63, -87, -64, -77, -82, -81, -71, -87, -67, -81, -83, -71, -72, -82, -87, -83, -78, -85, -72, -72, -81, -74, -87, -81, -72, -85, -84, -74, -81, -82, -44, -24, -25, -30, -27, -30, -25, -44, -25, -40, -46, -41, -36, -26, -44, -43, -33, -40, -41, -92, -72, -73, -78, -75, -78, -73, -92, -73, -88, -94, -88, -79, -92, -91, -81, -88, -89, -113, -104, -107, -113, -105, -109, -95, -115, -98, -112, -117, -96, -107, -103, -111, -117, -103, -97, -45, -33, -35, -98, -42, -47, -45, -43, -46, -33, -33, -37, -98, -47, -44, -29, -98, -74, -75, -79, -60, -59, -62, -75, -49, -77, -65, -66, -74, -71, -73, -36, -44, -43, -46, -43, -30, -25, -25, -30, -32, -46, -26, -37, -40, -40, -25, -46, -40, -31, -44, -43, -33, -40, -41, -81, -92, -74, -73, -94, -72, -77, -89, -92, -73, -88, -94, -73, -84, -80, -88, -74, -73, -92, -80, -77, -45, -49, -44, -49, -45, -37, -45, -59, -53, -46, -57, -42, -39, -53, -54, -59, -38, -49, -45, -53, -59, -57, -52, -38, -53, -40, -59, -49, -45, -42, -40, -53, -39, -39, -49, -43, -44, -11, -4, -13, -13, -61, -74, -60, -59, -61, -70, -76, -59, -74, -75, -80, -75, -78, -59, -78, -80, -63, -61, -64, -76, -74, -60, -60, -70, -65, -72, -80, -76, -64, -66, -77, -70, -65, -78, -59, -70, -64, -65, -60, 5, 6, -13, -11, -3, -15, 6, 4, -13, -11, -9, -15, 5, -13, -1, 2, -2, -9, -15, 4, -13, 6, -9, -69, -82, -87, -86, -76, -92, -90, -77, -87, -92, -86, -77, -87, -88, -90, -73, -87, -92, -90, -70, -71, -76, -73, -76, -71, -90, -71, -86, -101, -114, -119, -118, -108, -124, -117, -114, -105, -104, -103, -124, -120, -115, -122, -109, -109, -118, -111, -124, -119, -118, -121, -102, -116, -124, -118, -101, -118, -109, -103, 24, 24, 24};
    }

    static {
        A0b();
        A03 = new String[0];
        A04 = new String[]{A0U(22, 5, 111), A0U(1, 9, 77), A0U(10, 12, 27)};
    }

    public C11979Im(Context context) {
        this.A00 = context.getApplicationContext().getSharedPreferences(ProcessUtils.getProcessSpecificName(A0U(5514, 31, 77), context), 0);
    }

    public static float A00(Context context) {
        return A0T(context).A01(A0U(2266, 39, 93), 0.98f);
    }

    private final float A01(String str, float f) {
        String string = this.A00.getString(str, String.valueOf(f));
        if (string != null) {
            try {
                String value = A0U(5627, 4, 100);
                if (string.equals(value)) {
                    return f;
                }
                f = Float.parseFloat(string);
                return f;
            } catch (NumberFormatException unused) {
                return f;
            }
        }
        return f;
    }

    public static int A02(Context context) {
        return A0T(context).A2p(A0U(4264, 27, 124), 0);
    }

    public static int A03(Context context) {
        return A0T(context).A2p(A0U(99, 33, 99), 100);
    }

    public static int A04(Context context) {
        return A0T(context).A2p(A0U(2076, 33, 119), 0);
    }

    public static int A05(Context context) {
        return A0T(context).A2p(A0U(2239, 27, 87), -1);
    }

    public static int A06(Context context) {
        return A0T(context).A2p(A0U(569, 37, 123), 3);
    }

    public static int A07(Context context) {
        return A0T(context).A2p(A0U(5496, 18, 9), 0);
    }

    public static int A08(Context context) {
        return A0T(context).A2p(A0U(315, 36, 48), 3000);
    }

    public static int A09(Context context) {
        return A0T(context).A2p(A0U(1228, 50, 106), 30000);
    }

    public static int A0A(Context context) {
        return A0T(context).A2p(A0U(IronSourceConstants.RV_COLLECT_TOKENS_FAILED, 40, 117), 3);
    }

    public static int A0B(Context context) {
        return A0T(context).A2p(A0U(1278, 44, 85), 8000);
    }

    public static int A0C(Context context) {
        return A0T(context).A2p(A0U(1362, 48, 94), 100);
    }

    public static int A0D(Context context) {
        return A0T(context).A2p(A0U(1410, 39, 57), 60000);
    }

    public static int A0E(Context context) {
        return A0T(context).A2p(A0U(2903, 26, 9), -1);
    }

    public static int A0F(Context context) {
        return A0T(context).A2p(A0U(3701, 38, 54), 225);
    }

    public static int A0G(Context context) {
        return A0T(context).A2p(A0U(997, 41, 88), 3145728);
    }

    public static int A0H(Context context) {
        return A0T(context).A2p(A0U(3358, 21, 59), 3);
    }

    public static int A0I(Context context) {
        return A0T(context).A2p(A0U(5590, 37, 67), -1);
    }

    public static int A0J(Context context) {
        return A0T(context).A2p(A0U(3870, 32, 56), 2000);
    }

    public static int A0K(Context context) {
        return A0T(context).A2p(A0U(53, 46, 59), -1);
    }

    public static int A0L(Context context) {
        return A0T(context).A2p(A0U(5670, 23, 111), 0);
    }

    public static int A0M(Context context) {
        return A0T(context).A2p(A0U(4876, 35, 69), 3000);
    }

    public static int A0N(Context context) {
        return A0T(context).A2p(A0U(4911, 39, 75), 3000);
    }

    public static int A0O(Context context) {
        return A0T(context).A2p(A0U(1143, 46, 88), 0);
    }

    public static long A0P(Context context) {
        return A0T(context).A2q(A0U(535, 34, 98), 67108864L);
    }

    public static long A0Q(Context context) {
        return A0T(context).A2q(A0U(650, 45, 58), 1048576L);
    }

    public static long A0R(Context context) {
        return A0T(context).A2q(A0U(EventTypeExtended.EVENT_TYPE_EXTENDED_LURL_VALUE, 38, 97), 33554432L);
    }

    public static long A0S(Context context) {
        return A0T(context).A2q(A0U(5569, 21, 32), -1L);
    }

    public static synchronized C11979Im A0T(Context context) {
        C11979Im c11979Im;
        synchronized (C11979Im.class) {
            if (A01 == null) {
                A01 = new C11979Im(context);
            }
            c11979Im = A01;
        }
        return c11979Im;
    }

    public static String A0V(Context context) {
        return A0T(context).A2r(A0U(3330, 28, 81), A0U(5752, 3, 126));
    }

    public static String A0W(Context context) {
        return A0T(context).A2r(A0U(4851, 25, 3), A0U(5752, 3, 126));
    }

    public static Set<String> A0X(Context context) {
        return A0T(context).A0a(A0U(394, 44, 39), A03);
    }

    public static Set<String> A0Y(Context context) {
        return A0T(context).A0a(A0U(5631, 39, 46), A04);
    }

    public static Set<String> A0Z(Context context) {
        return A0T(context).A0a(A0U(1960, 44, 74), A03);
    }

    private Set<String> A0a(String str, String[] strArr) {
        JSONArray jSONArray;
        String jsonArrayString = A2r(str, null);
        try {
            if (jsonArrayString == null) {
                jSONArray = new JSONArray((Collection) Arrays.asList(strArr));
            } else {
                jSONArray = new JSONArray(jsonArrayString);
            }
            int length = jSONArray.length();
            LinkedHashSet linkedHashSet = new LinkedHashSet(length);
            for (int i = 0; i < length; i++) {
                linkedHashSet.add(jSONArray.getString(i));
            }
            return linkedHashSet;
        } catch (JSONException unused) {
            return new LinkedHashSet();
        }
    }

    public static void A0c(Context context) {
        A0T(context).A00.edit().clear().commit();
    }

    private void A0d(String str, String str2) throws JSONException {
        if (str == null || str.isEmpty() || str.equals(A0U(27, 2, 9))) {
            return;
        }
        JSONObject json = new JSONObject(str);
        A0e(json, str2);
    }

    private void A0e(JSONObject jSONObject, String str) throws JSONException {
        SharedPreferences.Editor edit = this.A00.edit();
        Iterator<String> keys = jSONObject.keys();
        while (keys.hasNext()) {
            String next = keys.next();
            if (next.equals(A0U(29, 24, 87))) {
                A0d(jSONObject.getString(next), next);
            } else {
                String str2 = next;
                if (str != null) {
                    str2 = str + A0U(0, 1, 91) + str2;
                }
                edit.putString(str2, jSONObject.getString(next));
            }
        }
        String sharedPrefKey = Long.toString(System.currentTimeMillis());
        edit.putString(A0U(5569, 21, 32), sharedPrefKey);
        edit.apply();
    }

    public static boolean A0f(Context context) {
        return A0T(context).A2r(A0U(5693, 28, 34), A0U(5459, 19, 80)).equals(A0U(5478, 18, 32));
    }

    public static boolean A0g(Context context) {
        return A0T(context).A2v(A0U(245, 38, 126), false);
    }

    public static boolean A0h(Context context) {
        return A0T(context).A2v(A0U(4168, 37, 77), false);
    }

    public static boolean A0i(Context context) {
        return A0T(context).A2v(A0U(351, 43, 47), true);
    }

    public static boolean A0j(Context context) {
        return A0T(context).A2v(A0U(2435, 29, 61), true);
    }

    public static boolean A0k(Context context) {
        return A0T(context).A2v(A0U(2109, 20, 50), false);
    }

    public static boolean A0l(Context context) {
        return A0T(context).A2v(A0U(3976, 27, 13), false);
    }

    public static boolean A0m(Context context) {
        return A0T(context).A2v(A0U(606, 44, 117), true);
    }

    public static boolean A0n(Context context) {
        return A0T(context).A2v(A0U(2214, 25, 8), true);
    }

    public static boolean A0o(Context context) {
        return A0T(context).A2v(A0U(3902, 44, 42), true);
    }

    public static boolean A0p(Context context) {
        return A0T(context).A2v(A0U(2328, 39, 30), false);
    }

    public static boolean A0q(Context context) {
        return A0T(context).A2v(A0U(733, 37, 79), true);
    }

    public static boolean A0r(Context context) {
        return A0T(context).A2v(A0U(2405, 30, 76), false);
    }

    public static boolean A0s(Context context) {
        return A0T(context).A2v(A0U(3179, 33, 55), false);
    }

    public static boolean A0t(Context context) {
        return A0T(context).A2v(A0U(770, 33, 76), true);
    }

    public static boolean A0u(Context context) {
        return A0T(context).A2v(A0U(2730, 21, 86), false);
    }

    public static boolean A0v(Context context) {
        return A0T(context).A2v(A0U(2751, 29, 31), false);
    }

    public static boolean A0w(Context context) {
        return A0T(context).A2v(A0U(2820, 28, 21), false);
    }

    public static boolean A0x(Context context) {
        return A0T(context).A2v(A0U(841, 40, 78), true);
    }

    public static boolean A0y(Context context) {
        return A0T(context).A2v(A0U(881, 35, 125), false);
    }

    public static boolean A0z(Context context) {
        return A0T(context).A2v(A0U(2575, 18, 48), false);
    }

    public static boolean A10(Context context) {
        return A0T(context).A2v(A0U(IronSourceConstants.BN_RELOAD, 35, 38), true);
    }

    public static boolean A11(Context context) {
        return A0T(context).A2v(A0U(283, 32, 76), false);
    }

    public static boolean A12(Context context) {
        return A0T(context).A2v(A0U(132, 25, 67), false);
    }

    public static boolean A13(Context context) {
        return A0T(context).A2v(A0U(157, 52, 65), false);
    }

    public static boolean A14(Context context) {
        return A0T(context).A2v(A0U(4291, 37, 105), false);
    }

    public static boolean A15(Context context) {
        return A0T(context).A2v(A0U(2929, 25, 78), false);
    }

    public static boolean A16(Context context) {
        return Build.VERSION.SDK_INT >= 18 && A0T(context).A2v(A0U(2464, 25, 21), false);
    }

    public static boolean A17(Context context) {
        return A0T(context).A2v(A0U(2796, 24, 51), false);
    }

    public static boolean A18(Context context) {
        return A0T(context).A2v(A0U(3813, 34, 15), false);
    }

    public static boolean A19(Context context) {
        return A0T(context).A2v(A0U(2988, 23, 66), false);
    }

    public static boolean A1A(Context context) {
        return A0T(context).A2v(A0U(2873, 30, 82), true);
    }

    public static boolean A1B(Context context) {
        return A0T(context).A2v(A0U(3078, 38, 97), false);
    }

    public static boolean A1C(Context context) {
        return A0T(context).A2v(A0U(IronSourceConstants.BN_CALLBACK_RELOAD_SUCCESS, 29, 6), false);
    }

    public static boolean A1D(Context context) {
        return A0T(context).A2v(A0U(3145, 34, 115), false);
    }

    public static boolean A1E(Context context) {
        return A0T(context).A2v(A0U(3212, 32, 122), false);
    }

    public static boolean A1F(Context context) {
        return A0T(context).A2v(A0U(3244, 37, 37), false);
    }

    public static boolean A1G(Context context) {
        return A0T(context).A2v(A0U(3379, 31, 118), false);
    }

    public static boolean A1H(Context context) {
        return A0T(context).A2v(A0U(3410, 26, 35), false);
    }

    public static boolean A1I(Context context) {
        return A0T(context).A2v(A0U(3436, 31, 85), false);
    }

    public static boolean A1J(Context context) {
        return A0T(context).A2v(A0U(3467, 31, 31), false);
    }

    public static boolean A1K(Context context) {
        return A0T(context).A2v(A0U(3498, 42, 23), false);
    }

    public static boolean A1L(Context context) {
        return A0T(context).A2v(A0U(3540, 34, 71), true);
    }

    public static boolean A1M(Context context) {
        return A0T(context).A2v(A0U(3574, 32, 2), true);
    }

    public static boolean A1N(Context context) {
        return A0T(context).A2v(A0U(3606, 29, 101), true);
    }

    public static boolean A1O(Context context) {
        return A0T(context).A2v(A0U(3635, 31, 118), true);
    }

    public static boolean A1P(Context context) {
        return A0T(context).A2v(A0U(3666, 35, 14), true);
    }

    public static boolean A1Q(Context context) {
        return A0T(context).A2v(A0U(1069, 23, 75), false);
    }

    public static boolean A1R(Context context) {
        return A0T(context).A2v(A0U(3772, 41, 5), false);
    }

    public static boolean A1S(Context context) {
        return A0T(context).A2v(A0U(2677, 22, 45), false);
    }

    public static boolean A1T(Context context) {
        return A0T(context).A2v(A0U(2699, 31, 78), false);
    }

    public static boolean A1U(Context context) {
        return A0T(context).A2v(A0U(4205, 28, 71), true);
    }

    public static boolean A1V(Context context) {
        return A0T(context).A2v(A0U(4233, 31, 43), true);
    }

    public static boolean A1W(Context context) {
        return A0T(context).A2v(A0U(4766, 30, 51), false);
    }

    public static boolean A1X(Context context) {
        return A0T(context).A2v(A0U(4796, 32, 19), false);
    }

    public static boolean A1Y(Context context) {
        return A0T(context).A2v(A0U(5721, 31, 2), true);
    }

    public static boolean A1Z(Context context) {
        return A0T(context).A2v(A0U(3739, 33, 77), false);
    }

    public static boolean A1a(Context context) {
        return A0T(context).A2v(A0U(3315, 15, 63), false);
    }

    public static boolean A1b(Context context) {
        return A0T(context).A2v(A0U(2367, 38, 8), false);
    }

    public static boolean A1c(Context context) {
        return A0T(context).A2v(A0U(2150, 30, 118), false);
    }

    public static boolean A1d(Context context) {
        return A0T(context).A2v(A0U(2639, 19, 67), true);
    }

    public static boolean A1e(Context context) {
        return A0T(context).A2v(A0U(2031, 45, 106), false);
    }

    public static boolean A1f(Context context) {
        return A0T(context).A2v(A0U(1449, 25, 0), true);
    }

    public static boolean A1g(Context context) {
        return A0T(context).A2v(A0U(4003, 41, 44), true);
    }

    public static boolean A1h(Context context) {
        return A0T(context).A2v(A0U(2658, 19, 6), true);
    }

    public static boolean A1i(Context context) {
        return A0T(context).A2v(A0U(4044, 35, 106), true);
    }

    public static boolean A1j(Context context) {
        return A0T(context).A2v(A0U(4079, 31, 54), true);
    }

    public static boolean A1k(Context context) {
        return A0T(context).A2v(A0U(IronSourceConstants.NT_CALLBACK_LOAD_SUCCESS, 32, 26), true);
    }

    public static boolean A1l(Context context) {
        return A0T(context).A2v(A0U(4328, 33, 61), false);
    }

    public static boolean A1m(Context context) {
        return A0T(context).A2v(A0U(1474, 45, 125), true);
    }

    public static boolean A1n(Context context) {
        return A0T(context).A2v(A0U(1519, 57, 97), false);
    }

    public static boolean A1o(Context context) {
        return A0T(context).A2v(A0U(1576, 59, 29), true);
    }

    public static boolean A1p(Context context) {
        return A0T(context).A2v(A0U(3046, 32, 73), false);
    }

    public static boolean A1q(Context context) {
        return A0T(context).A2v(A0U(5426, 33, 39), false);
    }

    public static boolean A1r(Context context) {
        return A0T(context).A2v(A0U(4361, 38, 104), true);
    }

    public static boolean A1s(Context context) {
        return A0T(context).A2v(A0U(4430, 38, 71), true);
    }

    public static boolean A1t(Context context) {
        return A0T(context).A2v(A0U(209, 36, 18), false);
    }

    public static boolean A1u(Context context) {
        return A0T(context).A2v(A0U(3847, 23, 10), true);
    }

    public static boolean A1v(Context context) {
        return A0T(context).A2v(A0U(5265, 28, 33), false);
    }

    public static boolean A1w(Context context) {
        return A0T(context).A2v(A0U(2129, 21, 24), false);
    }

    public static boolean A1x(Context context) {
        return A0T(context).A2v(A0U(1635, 44, 80), true);
    }

    public static boolean A1y(Context context) {
        return Build.VERSION.SDK_INT >= 16 && A0T(context).A2v(A0U(438, 46, 25), false);
    }

    public static boolean A1z(Context context) {
        return A0T(context).A2v(A0U(484, 51, 91), true);
    }

    public static boolean A20(Context context) {
        return A0T(context).A2v(A0U(4468, 43, 1), true);
    }

    public static boolean A21(Context context) {
        return A0T(context).A2v(A0U(5378, 48, 120), false);
    }

    public static boolean A22(Context context) {
        return A0T(context).A2v(A0U(2305, 23, 79), false);
    }

    public static boolean A23(Context context) {
        return A0T(context).A2v(A0U(695, 38, 12), false);
    }

    public static boolean A24(Context context) {
        return A0T(context).A2v(A0U(2848, 25, 33), true);
    }

    public static boolean A25(Context context) {
        return A0T(context).A2v(A0U(3946, 30, 8), true);
    }

    public static boolean A26(Context context) {
        return A0T(context).A2v(A0U(2004, 27, 12), false);
    }

    public static boolean A27(Context context) {
        return A0T(context).A2v(A0U(1092, 51, 59), false);
    }

    public static boolean A28(Context context) {
        return A0T(context).A2v(A0U(916, 40, 92), true);
    }

    public static boolean A29(Context context) {
        return A0T(context).A2v(A0U(1679, 31, 12), false);
    }

    public static boolean A2A(Context context) {
        return A0T(context).A2v(A0U(956, 41, 32), false);
    }

    public static boolean A2B(Context context) {
        return A0T(context).A2v(A0U(IronSourceConstants.NT_AUCTION_RESPONSE_WATERFALL, 31, 101), false);
    }

    public static boolean A2C(Context context) {
        return A0T(context).A2v(A0U(4542, 53, 61), false);
    }

    public static boolean A2D(Context context) {
        return A0T(context).A2v(A0U(4595, 38, 18), true);
    }

    public static boolean A2E(Context context) {
        return A0T(context).A2v(A0U(4633, 33, 25), false);
    }

    public static boolean A2F(Context context) {
        return A0T(context).A2v(A0U(1710, 53, 82), false);
    }

    public static boolean A2G(Context context) {
        return A0T(context).A2v(A0U(2954, 34, 52), false);
    }

    public static boolean A2H(Context context) {
        return A0T(context).A2v(A0U(1763, 48, 42), false);
    }

    public static boolean A2I(Context context) {
        return A0T(context).A2v(A0U(4666, 25, 66), false);
    }

    public static boolean A2J(Context context) {
        return A0T(context).A2v(A0U(2180, 34, 37), false);
    }

    public static boolean A2K(Context context) {
        return A0T(context).A2v(A0U(5293, 30, 53), false);
    }

    public static boolean A2L(Context context) {
        return A0T(context).A2v(A0U(4691, 35, 30), false);
    }

    public static boolean A2M(Context context) {
        return A0T(context).A2v(A0U(4142, 26, 108), false);
    }

    public static boolean A2N(Context context) {
        return A0T(context).A2v(A0U(1811, 51, 27), true);
    }

    public static boolean A2O(Context context) {
        return A0T(context).A2v(A0U(5347, 31, 108), false);
    }

    public static boolean A2P(Context context) {
        return A0T(context).A2v(A0U(4399, 31, 5), false);
    }

    public static boolean A2Q(Context context) {
        return A0T(context).A2v(A0U(IronSourceError.ERROR_RV_SHOW_EXCEPTION, 31, 99), false);
    }

    public static boolean A2R(Context context) {
        return A0T(context).A2v(A0U(4828, 23, 40), true);
    }

    public static boolean A2S(Context context) {
        return A0T(context).A2v(A0U(4950, 27, 53), false);
    }

    public static boolean A2T(Context context) {
        return A0T(context).A2v(A0U(5056, 36, 47), false);
    }

    public static boolean A2U(Context context) {
        return A0T(context).A2v(A0U(2593, 46, 65), true);
    }

    public static boolean A2V(Context context) {
        return A0T(context).A2v(A0U(3281, 34, 5), false);
    }

    public static boolean A2W(Context context) {
        return A0T(context).A2v(A0U(5214, 25, 36), false);
    }

    public static boolean A2X(Context context) {
        return A0T(context).A2v(A0U(5025, 31, 33), false);
    }

    public static boolean A2Y(Context context) {
        return A0T(context).A2v(A0U(4726, 40, 53), true);
    }

    public static boolean A2Z(Context context) {
        return A0T(context).A2v(A0U(2780, 16, 93), true);
    }

    public static boolean A2a(Context context) {
        return A0T(context).A2v(A0U(4977, 48, 33), false);
    }

    public static boolean A2b(Context context) {
        return A0T(context).A2v(A0U(5092, 23, 101), true);
    }

    public static boolean A2c(Context context) {
        return A0T(context).A2v(A0U(1862, 18, 14), false);
    }

    public static boolean A2d(Context context) {
        return A0T(context).A2v(A0U(1880, 40, 84), false);
    }

    public static boolean A2e(Context context) {
        return A0T(context).A2v(A0U(5115, 36, 25), false);
    }

    public static boolean A2f(Context context) {
        return A0T(context).A2v(A0U(5151, 41, 64), true);
    }

    public static boolean A2g(Context context) {
        return A0T(context).A2v(A0U(5192, 22, 66), false);
    }

    public static boolean A2h(Context context) {
        return A0T(context).A2v(A0U(5323, 24, 98), false);
    }

    public static boolean A2i(Context context) {
        return A0T(context).A2v(A0U(1189, 39, 105), false);
    }

    public static boolean A2j(Context context) {
        return A0T(context).A2v(A0U(5545, 24, 80), false);
    }

    public static boolean A2k(Context context) {
        return A0T(context).A2v(A0U(5239, 26, 87), true);
    }

    public static boolean A2l(Context context) {
        return A0T(context).A2v(A0U(1920, 40, 88), true);
    }

    public static boolean A2m(Context context, boolean z) {
        return A2o(context, z) && A0T(context).A2v(A0U(2489, 27, 32), false);
    }

    public static boolean A2n(Context context, boolean z) {
        return Build.VERSION.SDK_INT >= 21 && A2m(context, z) && A0T(context).A2v(A0U(2516, 35, 70), true);
    }

    public static boolean A2o(Context context, boolean z) {
        return z && Build.VERSION.SDK_INT >= 19 && A0T(context).A2v(A0U(2551, 24, 30), false);
    }

    public final int A2p(String str, int i) {
        String string = this.A00.getString(str, String.valueOf(i));
        if (string != null) {
            try {
                String value = A0U(5627, 4, 100);
                if (string.equals(value)) {
                    return i;
                }
                i = Integer.parseInt(string);
                return i;
            } catch (NumberFormatException unused) {
                return i;
            }
        }
        return i;
    }

    public final long A2q(String str, long j) {
        String string = this.A00.getString(str, String.valueOf(j));
        if (string != null) {
            try {
                String value = A0U(5627, 4, 100);
                if (string.equals(value)) {
                    return j;
                }
                j = Long.parseLong(string);
                return j;
            } catch (NumberFormatException unused) {
                return j;
            }
        }
        return j;
    }

    public final String A2r(String str, String str2) {
        String string = this.A00.getString(str, str2);
        if (string != null) {
            String value = A0U(5627, 4, 100);
            return string.equals(value) ? str2 : string;
        }
        return str2;
    }

    public final void A2s(String str) {
        this.A00.edit().remove(str).apply();
    }

    public final void A2t(String str) throws JSONException {
        A0d(str, null);
    }

    public final void A2u(JSONObject jSONObject) throws JSONException {
        if (jSONObject == null) {
            return;
        }
        A0e(jSONObject, null);
    }

    public final boolean A2v(String str, boolean z) {
        String string = this.A00.getString(str, String.valueOf(z));
        if (string != null) {
            String value = A0U(5627, 4, 100);
            return string.equals(value) ? z : Boolean.parseBoolean(string);
        }
        return z;
    }
}
